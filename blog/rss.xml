<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>太微之书 Blog</title>
        <link>https://dongrentianyu.github.io/the-handbook-of-tiddlywiki/blog</link>
        <description>太微之书 Blog</description>
        <lastBuildDate>Wed, 25 Oct 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[2023年10月25日]]></title>
            <link>https://dongrentianyu.github.io/the-handbook-of-tiddlywiki/blog/2023/10/25/</link>
            <guid>https://dongrentianyu.github.io/the-handbook-of-tiddlywiki/blog/2023/10/25/</guid>
            <pubDate>Wed, 25 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[搜索好像修复了，现在应该是我提交了就能够立即建立索引，然后进行检索。就是不知道会不会一直给我发邮件。]]></description>
            <content:encoded><![CDATA[<p>搜索好像修复了，现在应该是我提交了就能够立即建立索引，然后进行检索。就是不知道会不会一直给我发邮件。</p><p>咒</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2023年10月24日]]></title>
            <link>https://dongrentianyu.github.io/the-handbook-of-tiddlywiki/blog/2023/10/24/</link>
            <guid>https://dongrentianyu.github.io/the-handbook-of-tiddlywiki/blog/2023/10/24/</guid>
            <pubDate>Tue, 24 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[博客就用来记录遇到的问题吧。因为我不会 react，也不会 jsx，对 markdown 也不熟悉，经常会遇到各种各样的问题。反正有人看就看，没人看就留给未来的我去看，写就写了。文字垃圾也许未来会再利用。]]></description>
            <content:encoded><![CDATA[<p>博客就用来记录遇到的问题吧。因为我不会 react，也不会 jsx，对 markdown 也不熟悉，经常会遇到各种各样的问题。反正有人看就看，没人看就留给未来的我去看，写就写了。文字垃圾也许未来会再利用。</p><p>首先是图片的使用。markdown 只能简单引用，所以如果要把图片和其他代码结合起来使用的话，就需要用到 jsx。</p><p>下面是示例。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;figure class="half"&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;img src="https://pic35.photophoto.cn/20150511/0034034892281415_b.jpg" width="500px" /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;img src={require('./img/tiddlywiki-xp完整版本.png').default} alt="Example banner"/&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;/figure&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><figure class="half"><img loading="lazy" src="https://pic35.photophoto.cn/20150511/0034034892281415_b.jpg" width="100px" class="img_ev3q"><img loading="lazy" src="/the-handbook-of-tiddlywiki/assets/images/tiddlywiki-xp完整版本-c1631472905c164a9ee06b93dbaef9dc.png" alt="Example banner" class="img_ev3q"></figure><p>这里，第一张图片是引用网络图片，第二张图片是引用本地图片。</p><p>markdown 图片还有另一个问题，因为我使用了 <code>Office Viewer(Markdown Editor)</code>拓展插件，结果就是这个插件会自动给英文前后加上空格，导致图片一直显示不出来。所以现在图片名称中英夹杂的都会加上-符号。</p><p>还有图片需要调整角度的。一开始我还想着去写 jsx 调整，结果实际上本地里右键点击调整旋转就可以了。至少这样会更简单一点。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="写文档的难处">写文档的难处<a href="#写文档的难处" class="hash-link" aria-label="写文档的难处的直接链接" title="写文档的难处的直接链接">​</a></h2><p>现在我发现写文档需要先把图片搞出来。有了图片我才能继续写下去。没有图片纯文本，我又担心读者看不明白。</p><p>但图片的话，需要手动截图，截图完了需要重命名。命名完了之后还需要压缩一下大小。因为不压缩的话，后面会导致加载太慢或者 git 太大。整个过程我基本上都要备份和分类。</p><p>然后中间还时不时地出现报错，报错了我还得修。有的提示看得懂，有的看不懂，看不懂的就继续尝试解决办法，看这个框架的文档。</p><p>这个框架的文档中文版本没翻译全，一半中文一半英文，我就只好在英文界面开翻译去看。</p><p>这个框架因为是用原生 react 写的，所以基本上无法使用原生的 html，必须使用 jsx 才能写代码。所以我要开始学 jsx 和 react 了。</p><p>markdown 可视化编辑起来体验也不好。因为不可视化就没有上面的编辑栏按钮。可正常写文档的时候，我又不太需要。感觉就是很不方便。真心觉得 markdown 让人很恶心，但还出了个 mdx 来补充，完全是增加学习成本。</p><p>我感觉 tiddlywiki 的 wikitext 领先 markdown 不知道多少。</p><p>我原以为这个框架能够给我带来最大的便利，现在才明白，自己是请了个<strong>祖宗</strong>过来，什么都要看文档，一遍不够看两遍，看不懂就去搜索。感觉有些后悔，但没办法，目前这个是最优解了。</p><p>有的时候我还要去 github 仓库里查看源码，看官方是怎么写的。但这无疑是痛苦的。</p><p>当然还有该死的中英文输入法切换，再加上我用的还是五笔输入法，有的时候打不出字，真的要爆炸。</p><p>程序员不会自信他们写的程序写的很好，但他们有绝对的自信他们的文档写的很好，谁也不知道这种自信是从哪里来的，明明他们是阅读教程和文档最多的人群。</p><p>最终在反复阅读文档的情况下，终于解决了博客标题的设置，不然标题就一直会显示标准时间格式，不会正确显示标题。现在想想太记真是良心，tiddlywiki 真是良心，大部分不需要配置，也不需要写很难看懂的代码。</p>]]></content:encoded>
        </item>
    </channel>
</rss>